# Install the  pip install psutil matplotlib pywin32
# It is also dependent on real time clock abd win32com.client
# Source = ITL Braunschweig 

import win32com.client
import psutil
import time
import matplotlib.pyplot as plt

# === Load VISSIM ===
vissim_path = r"C:\Path\To\Your\Network.inpx"
layout_path = r"C:\Path\To\Your\Layout.layx"

vissim = win32com.client.Dispatch("Vissim.Vissim")
vissim.LoadNet(vissim_path)
vissim.LoadLayout(layout_path)

# === Setup Simulation ===
vissim.Simulation.SetAttValue("SimRes", 5)
vissim.Simulation.SetAttValue("SimPeriod", 1800)  # Sim for 1800s
vissim.Simulation.SetAttValue("RandSeed", 42)
vissim.Simulation.SetAttValue("UseMaxSimSpeed", True)

# ===  Fine and track VISSIM process for memory tracking ===
time.sleep(1)  # Give it time to initialize
vissim_pid = None
for proc in psutil.process_iter(['pid', 'name']):
    if "vissim" in proc.info['name'].lower():
        vissim_pid = proc.info['pid']
        break

if not vissim_pid:
    print("VISSIM process not found!")
    exit()

vissim_proc = psutil.Process(vissim_pid)

# === Start Simulation ===
start_time = time.time()

timestamps = []
mem_usage_mb = []

for step in range(0, 1800 * 5):  # SimRes = 5 => 5 steps/sec
    vissim.Simulation.RunSingleStep()

    if step % 10 == 0:  # Every 2 sim seconds
        elapsed = time.time() - start_time
        memory = vissim_proc.memory_info().rss / (1024 ** 2)  # MB

        timestamps.append(elapsed)
        mem_usage_mb.append(memory)

        print(f"Time: {elapsed:.2f}s | Memory: {memory:.2f} MB")

    time.sleep(0.001)

# === Close VISSIM ===
vissim = None

# === Plotting ===
plt.figure(figsize=(10, 6))
plt.plot(timestamps, mem_usage_mb, color='red', marker='o', linestyle='-')
plt.xlabel("Real Time (s)")
plt.ylabel("Memory Usage (MB)")
plt.title("VISSIM Memory Usage Over Execution Time")
plt.grid(True)
plt.tight_layout()
plt.show()
